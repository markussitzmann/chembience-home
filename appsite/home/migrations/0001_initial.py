# Generated by Django 2.2.4 on 2019-08-07 12:38

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.contrib.table_block.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.embeds.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0001_squashed_0021'),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionButtons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('small', models.BooleanField(default=False, verbose_name='Small Buttons')),
                ('fit', models.BooleanField(default=False, verbose_name='Fit Buttons')),
                ('stacked', models.BooleanField(default=False, verbose_name='Stacked Buttons')),
            ],
            options={
                'verbose_name': 'Action Button',
                'verbose_name_plural': 'Action Buttons',
            },
        ),
        migrations.CreateModel(
            name='Button',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True, default='', max_length=255)),
                ('size', models.CharField(blank=True, choices=[('', 'Default'), ('small', 'Small'), ('large', 'Large')], default='', max_length=25)),
                ('icon', models.CharField(blank=True, default='', max_length=25)),
                ('primary', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Button',
            },
        ),
        migrations.CreateModel(
            name='ItemIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('headline', models.CharField(blank=True, max_length=255, null=True)),
                ('introduction', models.TextField(blank=True, help_text='Text to describe the page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SectionIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('headline', models.CharField(blank=True, max_length=255, null=True)),
                ('introduction', models.TextField(blank=True, help_text='Text to describe the page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SectionPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('header', models.CharField(max_length=255)),
                ('content', wagtail.core.fields.StreamField([('heading_block', wagtail.core.blocks.StructBlock([('separator', wagtail.core.blocks.BooleanBlock(default=False, required=False)), ('heading_text', wagtail.core.blocks.CharBlock(classname='title', required=True)), ('size', wagtail.core.blocks.ChoiceBlock(blank=True, choices=[('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')], required=False))])), ('paragraph_block', wagtail.core.blocks.RichTextBlock(icon='fa-paragraph', template='home/blocks/paragraph_block.html')), ('image_block', wagtail.core.blocks.StructBlock([('separator', wagtail.core.blocks.BooleanBlock(default=False, required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('attribution', wagtail.core.blocks.CharBlock(required=False))])), ('block_quote', wagtail.core.blocks.StructBlock([('separator', wagtail.core.blocks.BooleanBlock(default=False, required=False)), ('text', wagtail.core.blocks.TextBlock()), ('attribute_name', wagtail.core.blocks.CharBlock(blank=True, label='e.g. Mary Berry', required=False))])), ('embed_block', wagtail.embeds.blocks.EmbedBlock(help_text='Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks', icon='fa-s15', template='home/blocks/embed_block.html')), ('table', wagtail.contrib.table_block.blocks.TableBlock(default_table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'minSpareRows': 0, 'renderer': 'text', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'})), ('code', wagtail.core.blocks.StructBlock([('language', wagtail.core.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('diff', 'diff'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')], help_text='Coding language', identifier='language', label='Language')), ('code', wagtail.core.blocks.TextBlock(identifier='code', label='Code'))], label='Code'))], blank=True, verbose_name='Page Content')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SpotlightIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='StreamPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('content', wagtail.core.fields.StreamField([('banner', wagtail.core.blocks.PageChooserBlock(blank=True, null=True, page_type=['home.BannerPage'])), ('section_index', wagtail.core.blocks.PageChooserBlock(blank=True, null=True, page_type=['home.SectionIndexPage'])), ('gallery', wagtail.core.blocks.PageChooserBlock(blank=True, null=True, page_type=['home.GalleryPage'])), ('item_index', wagtail.core.blocks.PageChooserBlock(blank=True, null=True, page_type=['home.ItemIndexPage'])), ('spotlight_index', wagtail.core.blocks.PageChooserBlock(blank=True, null=True, page_type=['home.SpotlightIndexPage']))])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='StylingBase',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='StylingColorOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(blank=True, choices=[('color0', 'Color 0'), ('color1', 'Color 1'), ('color2', 'Color 2'), ('color3', 'Color 3'), ('color4', 'Color 4'), ('color5', 'Color 5'), ('color6', 'Color 6'), ('color7', 'Color 7')], default='color0', max_length=30, null=True)),
                ('invert', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StylingSizeOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('small', 'Small'), ('medium', 'Medium'), ('big', 'Big')], default='medium', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='BannerStyling',
            fields=[
                ('stylingcoloroptions_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='home.StylingColorOptions')),
                ('stylingbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='home.StylingBase')),
                ('style', models.CharField(choices=[('style1', 'No. 1'), ('style2', 'No. 2'), ('style3', 'No. 3'), ('style4', 'No. 4'), ('style5', 'No. 5')], default='style1', max_length=30)),
                ('orientation', models.CharField(choices=[('orient-left', 'left'), ('orient-right', 'right')], default='orient-right', max_length=30)),
                ('content_align', models.CharField(blank=True, choices=[('content-align-left', 'left'), ('content-align-center', 'center'), ('content-align-right', 'right')], default='content-align-left', max_length=30, null=True)),
                ('image_position', models.CharField(blank=True, choices=[('image-position-left', 'left'), ('image-position-center', 'center'), ('image-position-right', 'right')], max_length=30, null=True)),
                ('onload_fade', models.CharField(blank=True, choices=[('onload-content-fade-up', 'content fade up'), ('onload-content-fade-down', 'content fade down'), ('onload-content-fade-left', 'content fade left'), ('onload-content-fade-right', 'content fade right'), ('onload-content-fade-in', 'content fade in'), ('onload-image-fade-in', 'image fade in')], max_length=30, null=True)),
                ('onscroll_fade', models.CharField(blank=True, choices=[('onscroll-content-fade-up', 'content fade up'), ('onscroll-content-fade-down', 'content fade down'), ('onscroll-content-fade-left', 'content fade left'), ('onscroll-content-fade-right', 'content fade right'), ('onscroll-content-fade-in', 'content fade in'), ('onscroll-image-fade-in', 'image fade in')], max_length=30, null=True)),
            ],
            bases=('home.stylingbase', 'home.stylingcoloroptions'),
        ),
        migrations.CreateModel(
            name='GalleryStyling',
            fields=[
                ('stylingsizeoptions_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='home.StylingSizeOptions')),
                ('stylingbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='home.StylingBase')),
                ('style', models.CharField(choices=[('style1', 'No. 1'), ('style2', 'No. 2')], default='style1', max_length=30)),
                ('lightbox_button_text', models.CharField(blank=True, max_length=32, null=True)),
                ('onload_fade_in', models.BooleanField(default=False, verbose_name='Fade in on load')),
                ('onscroll_fade_in', models.BooleanField(default=False, verbose_name='Fade in on load')),
            ],
            options={
                'verbose_name': 'Gallery Styling',
            },
            bases=('home.stylingbase', 'home.stylingsizeoptions'),
        ),
        migrations.CreateModel(
            name='StylingOptions',
            fields=[
                ('stylingbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='home.StylingBase')),
                ('orientation', models.CharField(choices=[('orient-left', 'left'), ('orient-right', 'right')], default='orient-right', max_length=30)),
                ('content_align', models.CharField(blank=True, choices=[('content-align-left', 'left'), ('content-align-center', 'center'), ('content-align-right', 'right')], default='content-align-left', max_length=30, null=True)),
                ('image_position', models.CharField(blank=True, choices=[('image-position-left', 'left'), ('image-position-center', 'center'), ('image-position-right', 'right')], max_length=30, null=True)),
                ('onload_fade', models.CharField(blank=True, choices=[('onload-content-fade-up', 'content fade up'), ('onload-content-fade-down', 'content fade down'), ('onload-content-fade-left', 'content fade left'), ('onload-content-fade-right', 'content fade right'), ('onload-content-fade-in', 'content fade in'), ('onload-image-fade-in', 'image fade in')], max_length=30, null=True)),
                ('onscroll_fade', models.CharField(blank=True, choices=[('onscroll-content-fade-up', 'content fade up'), ('onscroll-content-fade-down', 'content fade down'), ('onscroll-content-fade-left', 'content fade left'), ('onscroll-content-fade-right', 'content fade right'), ('onscroll-content-fade-in', 'content fade in'), ('onscroll-image-fade-in', 'image fade in')], max_length=30, null=True)),
                ('color_choices', models.CharField(blank=True, choices=[('color0', 'Color 0'), ('color1', 'Color 1'), ('color2', 'Color 2'), ('color3', 'Color 3'), ('color4', 'Color 4'), ('color5', 'Color 5'), ('color6', 'Color 6'), ('color7', 'Color 7')], max_length=30, null=True)),
            ],
            options={
                'verbose_name_plural': 'Styling Options',
            },
            bases=('home.stylingbase',),
        ),
        migrations.CreateModel(
            name='ItemPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('icon', models.CharField(blank=True, default='', max_length=25)),
                ('headline', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, help_text='Text to describe the page')),
                ('actions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='home.ActionButtons')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='GalleryArticlePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('headline', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, help_text='Text to describe the page')),
                ('actions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='home.ActionButtons')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ActionButton',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('action', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='buttons', to='home.ActionButtons')),
                ('button', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='home.Button')),
            ],
            options={
                'verbose_name': 'Action Button',
            },
        ),
        migrations.CreateModel(
            name='SpotlightPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('content', wagtail.core.fields.RichTextField(blank=True)),
                ('actions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='home.ActionButtons')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('styling_options', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='home.StylingOptions')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='GalleryPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('headline', models.CharField(blank=True, max_length=255, null=True)),
                ('introduction', models.TextField(blank=True, help_text='Text to describe the page')),
                ('styling_options', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='home.GalleryStyling')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BannerPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('headline', models.CharField(max_length=127)),
                ('major', wagtail.core.fields.RichTextField(blank=True, verbose_name='Major Text')),
                ('minor', wagtail.core.fields.RichTextField(blank=True, verbose_name='Minor Text')),
                ('fullscreen', models.BooleanField(default=True, verbose_name='Full Screen')),
                ('actions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='home.ActionButtons')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('styling_options', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='home.BannerStyling')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
